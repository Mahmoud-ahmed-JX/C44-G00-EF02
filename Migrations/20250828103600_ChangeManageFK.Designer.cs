// <auto-generated />
using System;
using EF_Asmnt2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Asmnt2.Migrations
{
    [DbContext(typeof(ItiDbContext))]
    [Migration("20250828103600_ChangeManageFK")]
    partial class ChangeManageFK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_Asmnt2.Model.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Top_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("Top_Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Course_Inst", b =>
                {
                    b.Property<int>("Inst_Id")
                        .HasColumnType("int");

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<int>("Evaluate")
                        .HasColumnType("int");

                    b.HasKey("Inst_Id", "Course_Id");

                    b.HasIndex("Course_Id");

                    b.ToTable("Crs_Ins");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("HiringDate")
                        .HasColumnType("date");

                    b.Property<int?>("Ins_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Ins_Id")
                        .IsUnique()
                        .HasFilter("[Ins_Id] IS NOT NULL");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Dep_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("HourRateBonus")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("Dep_Id");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Stud_Course", b =>
                {
                    b.Property<int>("Stud_Id")
                        .HasColumnType("int");

                    b.Property<int>("Course_Id")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.HasKey("Stud_Id", "Course_Id");

                    b.HasIndex("Course_Id");

                    b.ToTable("St_Crs");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Dep_Id")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Dep_Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Course", b =>
                {
                    b.HasOne("EF_Asmnt2.Model.Topic", "Topic")
                        .WithMany("Courses")
                        .HasForeignKey("Top_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Course_Inst", b =>
                {
                    b.HasOne("EF_Asmnt2.Model.Course", "Course")
                        .WithMany("Course_Insts")
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EF_Asmnt2.Model.Instructor", "Instructor")
                        .WithMany("Course_Insts")
                        .HasForeignKey("Inst_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Department", b =>
                {
                    b.HasOne("EF_Asmnt2.Model.Instructor", "Instructor")
                        .WithOne("Department")
                        .HasForeignKey("EF_Asmnt2.Model.Department", "Ins_Id")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Instructor", b =>
                {
                    b.HasOne("EF_Asmnt2.Model.Department", "DepartmentManages")
                        .WithMany("Instructors")
                        .HasForeignKey("Dep_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DepartmentManages");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Stud_Course", b =>
                {
                    b.HasOne("EF_Asmnt2.Model.Course", "Course")
                        .WithMany("Stud_Courses")
                        .HasForeignKey("Course_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EF_Asmnt2.Model.Student", "Student")
                        .WithMany("Stud_Courses")
                        .HasForeignKey("Stud_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Student", b =>
                {
                    b.HasOne("EF_Asmnt2.Model.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("Dep_Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Course", b =>
                {
                    b.Navigation("Course_Insts");

                    b.Navigation("Stud_Courses");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Department", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Instructor", b =>
                {
                    b.Navigation("Course_Insts");

                    b.Navigation("Department")
                        .IsRequired();
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Student", b =>
                {
                    b.Navigation("Stud_Courses");
                });

            modelBuilder.Entity("EF_Asmnt2.Model.Topic", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
